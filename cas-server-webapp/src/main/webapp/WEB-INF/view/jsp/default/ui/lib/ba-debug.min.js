/*
 * Licensed to Jasig under one or more contributor license
 * agreements. See the NOTICE file distributed with this work
 * for additional information regarding copyright ownership.
 * Jasig licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file
 * except in compliance with the License.  You may obtain a
 * copy of the License at the following location:
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

window.debug = (function () {
    var i = this, b = Array.prototype.slice, d = i.console, h = {}, f, g, m = 9, c = ["error", "warn", "info", "debug", "log"], l = "assert clear count dir dirxml exception group groupCollapsed groupEnd profile profileEnd table time timeEnd trace".split(" "), j = l.length, a = [];
    while (--j >= 0) {
        (function (n) {
            h[n] = function () {
                m !== 0 && d && d[n] && d[n].apply(d, arguments)
            }
        })(l[j])
    }
    j = c.length;
    while (--j >= 0) {
        (function (n, o) {
            h[o] = function () {
                var q = b.call(arguments), p = [o].concat(q);
                a.push(p);
                e(p);
                if (!d || !k(n)) {
                    return
                }
                d.firebug ? d[o].apply(i, q) : d[o] ? d[o](q) : d.log(q)
            }
        })(j, c[j])
    }
    function e(n) {
        if (f && (g || !d || !d.log)) {
            f.apply(i, n)
        }
    }

    h.setLevel = function (n) {
        m = typeof n === "number" ? n : 9
    };
    function k(n) {
        return m > 0 ? m > n : c.length + m <= n
    }

    h.setCallback = function () {
        var o = b.call(arguments), n = a.length, p = n;
        f = o.shift() || null;
        g = typeof o[0] === "boolean" ? o.shift() : false;
        p -= typeof o[0] === "number" ? o.shift() : n;
        while (p < n) {
            e(a[p++])
        }
    };
    return h
})();